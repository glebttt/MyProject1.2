Index: src/main/java/code/ProbeLauncher.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package code;\n\nimport code.graphics.Visualizer;\nimport code.model.Model;\nimport code.model.data.loaders.FileDataLoader;\nimport code.model.objects.Probe;\n\npublic class ProbeLauncher {\n    public static void main(String[] args) {\n        Model.getInstance().loadData(new FileDataLoader());\n        Probe probe = new Probe();\n        Probe.Boost boost = new Probe.Boost(0, new double[]{68.7449, -44.1, -2.2176});\n        probe.addBoost(boost);\n        Model.addProbe(probe);\n//        ModelRunner.runnerForMultipleProbes(365, 2, Model.getPlanetObjectsArrayList(), Model.getProbes());\n//        System.out.println(probe.getShortestDistanceToTitan());\n\n        Visualizer.main(args);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/code/ProbeLauncher.java b/src/main/java/code/ProbeLauncher.java
--- a/src/main/java/code/ProbeLauncher.java	
+++ b/src/main/java/code/ProbeLauncher.java	
@@ -3,13 +3,15 @@
 import code.graphics.Visualizer;
 import code.model.Model;
 import code.model.data.loaders.FileDataLoader;
+import code.model.objects.Boost;
 import code.model.objects.Probe;
 
 public class ProbeLauncher {
     public static void main(String[] args) {
         Model.getInstance().loadData(new FileDataLoader());
         Probe probe = new Probe();
-        Probe.Boost boost = new Probe.Boost(0, new double[]{68.7449, -44.1, -2.2176});
+//        probe.setVelocity(new double[]{68.7449, -44.1, -2.2176});
+        Boost boost = new Boost(0, new double[]{68.7449, -44.1, -2.2176});
         probe.addBoost(boost);
         Model.addProbe(probe);
 //        ModelRunner.runnerForMultipleProbes(365, 2, Model.getPlanetObjectsArrayList(), Model.getProbes());
Index: src/main/java/code/algorithms/Solvers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package code.algorithms;\n\nimport code.model.objects.PlanetObject;\nimport code.utils.HelperFunctions;\n\npublic class Solvers {\n    final static double G = PlanetObject.G;\n\n\n    private Solvers() {\n    }\n\n\n    private static double accelerationFunction(double position1D, PlanetObject planetObject, PlanetObject otherObject, int i) {\n        double force = 0;\n        double acceleration = 0;\n        double M1 = planetObject.getMass();\n        double M2 = otherObject.getMass();\n        double positionalDifference = 0;\n        double[] coordinates = planetObject.getCoordinates();\n        double[] otherCoordinates = otherObject.getCoordinates();\n\n        positionalDifference = position1D - otherCoordinates[i];\n\n        double distance = 1 / HelperFunctions.getDistanceBetweenWithVectors(coordinates, otherCoordinates);\n\n        force = -G * M1 * M2 * (Math.pow(distance, 3)) * positionalDifference;\n        acceleration = force / M1;\n\n        return acceleration;\n    }\n\n\n    /**\n     * @param acceleration is the all the accelerations that affect a planet\n     * @param step is amount of time we move the planet 1 second is 1\n     *\n     * This is the Euler's solver that updates the planet position with step in time\n     */\n    public static void implicitEuler(PlanetObject planetObject, double[] acceleration, double step){\n        double[] velocityVector = planetObject.getVelocity();\n        double[] positionalVector = planetObject.getCoordinates();\n        for(int i = 0; i < 3; i++)\n        {\n            velocityVector[i] += acceleration[i] * step;\n            positionalVector[i] += velocityVector[i] * step;\n        }\n        planetObject.setVelocity(velocityVector);\n        planetObject.setCoordinates(positionalVector);\n    }\n\n    public static void rungeKutta4(PlanetObject planetObject, PlanetObject otherObject, double h) {\n        double[] velocityVector = planetObject.getVelocity();\n        double[] positionalVector = planetObject.getCoordinates();\n        double[] acceleration = planetObject.getAcceleration();\n        double[][] y = {positionalVector, velocityVector};\n\n        double[] kr1 = new double[3];\n        double[] kr2 = new double[3];\n        double[] kr3 = new double[3];\n        double[] kr4 = new double[3];\n        double[] kv1 = new double[3];\n        double[] kv2 = new double[3];\n        double[] kv3 = new double[3];\n        double[] kv4 = new double[3];\n\n        for (int i = 0; i < 3; i++) {\n            kv1[i] = acceleration[i] + accelerationFunction(positionalVector[i], planetObject, otherObject, i);\n            kr1[i] = velocityVector[i] * h;\n            kv2[i] = acceleration[i] + accelerationFunction(positionalVector[i] + (kr1[i] * (h / 2)), planetObject, otherObject, i);\n            kr2[i] = velocityVector[i] * (kv1[i] * (h / 2));\n            kv3[i] = acceleration[i] + accelerationFunction(positionalVector[i] + (kr2[i] * (h / 2)), planetObject, otherObject, i);\n            kr3[i] = velocityVector[i] * (kv2[i] * (h / 2));\n            kv4[i] = acceleration[i] + accelerationFunction(positionalVector[i] + (kr3[i] * (h / 2)), planetObject, otherObject, i);\n            kr4[i] = velocityVector[i] * (kv3[i] * h);\n\n            velocityVector[i] = velocityVector[i] + (h / 6) * (kv1[i] + 2 * kv2[i] + 2 * kv3[i] + kv4[i]);\n            positionalVector[i] = positionalVector[i] + (h / 6) * (kr1[i] + 2 * kr2[i] + 2 * kr3[i] + kr4[i]);\n        }\n\n        double newAcceleration[] = new double[3];\n        newAcceleration = HelperFunctions.addition(newAcceleration, planetObject.accelerationBetween(otherObject));\n\n        planetObject.setVelocity(velocityVector);\n        planetObject.setCoordinates(positionalVector);\n        planetObject.setAcceleration(newAcceleration);\n    }\n\n\n    public static void kutta3(PlanetObject planetObject, PlanetObject otherObject, double h){\n        double[] velocityVector = planetObject.getVelocity();\n        double[] positionalVector = planetObject.getCoordinates();\n        double[] acceleration = planetObject.getAcceleration();\n        double[] kv1 = new double[3];\n        double[] kv2 = new double[3];\n        double[] kv3 = new double[3];\n        double[] kr1 = new double[3];\n        double[] kr2 = new double[3];\n        double[] kr3 = new double[3];\n\n        for (int i = 0; i < 3; i++){\n            kr1[i] = h * velocityVector[i];\n            kv1[i] = acceleration[i] + accelerationFunction(positionalVector[i], planetObject, otherObject, i);\n            kr2[i] = h * (velocityVector[i] + kv1[i]/2);\n            kv2[i] = acceleration[i] + accelerationFunction(kr1[i]/2, planetObject, otherObject, i);\n            kr3[i] = h * (velocityVector[i] - kv1[i] + 2*kv2[i]);\n            kv3[i] = acceleration[i] + accelerationFunction(positionalVector[i] - kv1[i] + 2*kv2[i], planetObject, otherObject, i);\n\n            positionalVector[i] += (h/6)*(kr1[i] + 4*kr2[i] + kr3[i]);\n            velocityVector[i] += (h/6)*(kv1[i] + 4*kv2[i] + kv3[i]);\n        }\n\n        double[] newAcceleration = new double[3];\n        newAcceleration = HelperFunctions.addition(newAcceleration, planetObject.accelerationBetween(otherObject));\n        planetObject.setCoordinates(positionalVector);\n        planetObject.setVelocity(velocityVector);\n        planetObject.setAcceleration(newAcceleration);\n\n    }\n\n\n    public static void explicitEuler(PlanetObject planetObject, PlanetObject otherObject, double h){\n        double[] velocityVector = planetObject.getVelocity();\n        double[] positionalVector = planetObject.getCoordinates();\n        double[] acceleration = planetObject.getAcceleration();\n\n        for (int i = 0; i < 3; i++) {\n            acceleration[i] += accelerationFunction(positionalVector[i], planetObject, otherObject, i);\n            positionalVector[i] += velocityVector[i] * h;\n            velocityVector[i] += acceleration[i] * h;\n        }\n\n        planetObject.setVelocity(velocityVector);\n        planetObject.setCoordinates(positionalVector);\n        planetObject.setAcceleration(acceleration);\n    }\n\n\n    public static void ralston2(PlanetObject planetObject, PlanetObject otherObject, double h){\n        double[] velocityVector = planetObject.getVelocity();\n        double[] positionalVector = planetObject.getCoordinates();\n        double[] acceleration = planetObject.getAcceleration();\n        double kv1[] = new double[3];\n        double kv2[] = new double[3];\n        double kr1[] = new double[3];\n        double kr2[] = new double[3];\n\n        for (int i = 0; i < 3; i++){\n            kv1[i] = acceleration[i] + accelerationFunction(positionalVector[i], planetObject, otherObject, i);\n            kr1[i] = velocityVector[i] * h;\n            kv2[i] = acceleration[i] + accelerationFunction(positionalVector[i] + (kr1[i] * (2*h/3)), planetObject, otherObject, i);\n            kr2[i] = velocityVector[i] * (kv1[i] * (2*h/3));\n\n            velocityVector[i] = velocityVector[i] + (h/4) * (kv1[i] + 3*kv2[i]);\n            positionalVector[i] = positionalVector[i] + (h/4) * (kr1[i] + 3*kr2[i]);\n        }\n\n        double newAcceleration[] = new double[3];\n        newAcceleration = HelperFunctions.addition(newAcceleration, planetObject.accelerationBetween(otherObject));\n\n        planetObject.setVelocity(velocityVector);\n        planetObject.setCoordinates(positionalVector);\n        planetObject.setAcceleration(newAcceleration);\n\n    }\n\n    public static void heun3(PlanetObject planetObject, PlanetObject otherObject, double h){\n        double [] velocityVector = planetObject.getVelocity();\n        double [] positionalVector = planetObject.getCoordinates();\n        double [] acceleration = planetObject.getAcceleration();\n        double [] kr1 = new double [3];\n        double [] kr2 = new double [3];\n        double [] kr3 = new double [3];\n        double [] kv1 = new double [3];\n        double [] kv2 = new double [3];\n        double [] kv3 = new double [3];\n\n        for (int i = 0; i < 3; i++){\n            kr1[i] = h * velocityVector[i];\n            kv1[i] = acceleration[i] + accelerationFunction(positionalVector[i], planetObject, otherObject, i);\n            kr2[i] = h * (velocityVector[i] * (1/3)*kv1[i]);\n            kv2[i] = acceleration[i] + accelerationFunction(positionalVector[i] + (kr1[i]/3), planetObject, otherObject, i);\n            kr3[i] = h * (velocityVector[i] * (2/3)*kv2[i]);\n            kv3[i] = acceleration[i] + accelerationFunction(positionalVector[i] + (2/3)*kr2[i], planetObject, otherObject, i);\n\n            velocityVector[i] = velocityVector[i] + (h/4) * (kv1[i] + 3*kv3[i]);\n            positionalVector[i] = positionalVector[i] + (h/4) * (kr1[i] + 3*kr3[i]);\n        }\n\n        double newAcceleration[] = new double[3];\n        newAcceleration = HelperFunctions.addition(newAcceleration, planetObject.accelerationBetween(otherObject));\n\n        planetObject.setVelocity(velocityVector);\n        planetObject.setCoordinates(positionalVector);\n        planetObject.setAcceleration(newAcceleration);\n    }\n\n\n    public static void midPoint(PlanetObject planetObject, PlanetObject otherObject, double h) {\n        double[] velocityVector = planetObject.getVelocity();\n        double[] positionalVector = planetObject.getCoordinates();\n        double[] newPositionalVector = new double[3];\n        double[] newVelocityVector = new double[3];\n        double[] acceleration = planetObject.getAcceleration();\n        double[] kv1 = new double [3];\n        double[] newAcceleration = new double[3];\n\n\n        for (int i = 0; i < 3; i++) {\n            kv1[i] = acceleration[i] + (0.5 * accelerationFunction(positionalVector[i], planetObject, otherObject, i) * h);\n            newPositionalVector[i] = positionalVector[i] + (0.5 * velocityVector[i] * h);\n            newVelocityVector[i] = velocityVector[i] + kv1[i];\n        }\n        for (int i = 0; i < 3; i++) {\n            kv1[i] = acceleration[i] + (accelerationFunction(newPositionalVector[i], planetObject, otherObject, i) * h);\n            velocityVector[i] = velocityVector[i] + acceleration[i];\n            positionalVector[i] = positionalVector[i] + (newVelocityVector[i] * h);\n        }\n\n        newAcceleration = HelperFunctions.addition(newAcceleration, planetObject.accelerationBetween(otherObject));\n\n        planetObject.setVelocity(velocityVector);\n        planetObject.setCoordinates(positionalVector);\n        planetObject.setAcceleration(newAcceleration);\n    }\n\n    public static void fastEuler(PlanetObject planetObject, double[] acceleration, double step) {\n        double[] velocityVector = planetObject.getVelocity();\n        double[] positionalVector = planetObject.getCoordinates();\n        for (int i = 0; i < 3; i++) {\n            velocityVector[i] += acceleration[i] * step;\n            positionalVector[i] += velocityVector[i] * step;\n        }\n        planetObject.setVelocity(velocityVector);\n        planetObject.setCoordinates(positionalVector);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/code/algorithms/Solvers.java b/src/main/java/code/algorithms/Solvers.java
--- a/src/main/java/code/algorithms/Solvers.java	
+++ b/src/main/java/code/algorithms/Solvers.java	
@@ -33,15 +33,14 @@
 
     /**
      * @param acceleration is the all the accelerations that affect a planet
-     * @param step is amount of time we move the planet 1 second is 1
-     *
-     * This is the Euler's solver that updates the planet position with step in time
+     * @param step         is amount of time we move the planet 1 second is 1
+     *                     <p>
+     *                     This is the Euler's solver that updates the planet position with step in time
      */
-    public static void implicitEuler(PlanetObject planetObject, double[] acceleration, double step){
+    public static void implicitEuler(PlanetObject planetObject, double[] acceleration, double step) {
         double[] velocityVector = planetObject.getVelocity();
         double[] positionalVector = planetObject.getCoordinates();
-        for(int i = 0; i < 3; i++)
-        {
+        for (int i = 0; i < 3; i++) {
             velocityVector[i] += acceleration[i] * step;
             positionalVector[i] += velocityVector[i] * step;
         }
@@ -87,7 +86,7 @@
     }
 
 
-    public static void kutta3(PlanetObject planetObject, PlanetObject otherObject, double h){
+    public static void kutta3(PlanetObject planetObject, PlanetObject otherObject, double h) {
         double[] velocityVector = planetObject.getVelocity();
         double[] positionalVector = planetObject.getCoordinates();
         double[] acceleration = planetObject.getAcceleration();
@@ -98,16 +97,16 @@
         double[] kr2 = new double[3];
         double[] kr3 = new double[3];
 
-        for (int i = 0; i < 3; i++){
+        for (int i = 0; i < 3; i++) {
             kr1[i] = h * velocityVector[i];
             kv1[i] = acceleration[i] + accelerationFunction(positionalVector[i], planetObject, otherObject, i);
-            kr2[i] = h * (velocityVector[i] + kv1[i]/2);
-            kv2[i] = acceleration[i] + accelerationFunction(kr1[i]/2, planetObject, otherObject, i);
-            kr3[i] = h * (velocityVector[i] - kv1[i] + 2*kv2[i]);
-            kv3[i] = acceleration[i] + accelerationFunction(positionalVector[i] - kv1[i] + 2*kv2[i], planetObject, otherObject, i);
+            kr2[i] = h * (velocityVector[i] + kv1[i] / 2);
+            kv2[i] = acceleration[i] + accelerationFunction(kr1[i] / 2, planetObject, otherObject, i);
+            kr3[i] = h * (velocityVector[i] - kv1[i] + 2 * kv2[i]);
+            kv3[i] = acceleration[i] + accelerationFunction(positionalVector[i] - kv1[i] + 2 * kv2[i], planetObject, otherObject, i);
 
-            positionalVector[i] += (h/6)*(kr1[i] + 4*kr2[i] + kr3[i]);
-            velocityVector[i] += (h/6)*(kv1[i] + 4*kv2[i] + kv3[i]);
+            positionalVector[i] += (h / 6) * (kr1[i] + 4 * kr2[i] + kr3[i]);
+            velocityVector[i] += (h / 6) * (kv1[i] + 4 * kv2[i] + kv3[i]);
         }
 
         double[] newAcceleration = new double[3];
@@ -119,7 +118,7 @@
     }
 
 
-    public static void explicitEuler(PlanetObject planetObject, PlanetObject otherObject, double h){
+    public static void explicitEuler(PlanetObject planetObject, PlanetObject otherObject, double h) {
         double[] velocityVector = planetObject.getVelocity();
         double[] positionalVector = planetObject.getCoordinates();
         double[] acceleration = planetObject.getAcceleration();
@@ -136,55 +135,54 @@
     }
 
 
-    public static void ralston2(PlanetObject planetObject, PlanetObject otherObject, double h){
+    public static void ralston2(PlanetObject planetObject, PlanetObject otherObject, double h) {
         double[] velocityVector = planetObject.getVelocity();
         double[] positionalVector = planetObject.getCoordinates();
         double[] acceleration = planetObject.getAcceleration();
-        double kv1[] = new double[3];
-        double kv2[] = new double[3];
-        double kr1[] = new double[3];
-        double kr2[] = new double[3];
+        double[] kv1 = new double[3];
+        double[] kv2 = new double[3];
+        double[] kr1 = new double[3];
+        double[] kr2 = new double[3];
 
-        for (int i = 0; i < 3; i++){
+        for (int i = 0; i < 3; i++) {
             kv1[i] = acceleration[i] + accelerationFunction(positionalVector[i], planetObject, otherObject, i);
             kr1[i] = velocityVector[i] * h;
-            kv2[i] = acceleration[i] + accelerationFunction(positionalVector[i] + (kr1[i] * (2*h/3)), planetObject, otherObject, i);
-            kr2[i] = velocityVector[i] * (kv1[i] * (2*h/3));
+            kv2[i] = acceleration[i] + accelerationFunction(positionalVector[i] + (kr1[i] * (2 * h / 3)), planetObject, otherObject, i);
+            kr2[i] = velocityVector[i] * (kv1[i] * (2 * h / 3));
 
-            velocityVector[i] = velocityVector[i] + (h/4) * (kv1[i] + 3*kv2[i]);
-            positionalVector[i] = positionalVector[i] + (h/4) * (kr1[i] + 3*kr2[i]);
+            velocityVector[i] = velocityVector[i] + (h / 4) * (kv1[i] + 3 * kv2[i]);
+            positionalVector[i] = positionalVector[i] + (h / 4) * (kr1[i] + 3 * kr2[i]);
         }
 
-        double newAcceleration[] = new double[3];
+        double[] newAcceleration = new double[3];
         newAcceleration = HelperFunctions.addition(newAcceleration, planetObject.accelerationBetween(otherObject));
 
         planetObject.setVelocity(velocityVector);
         planetObject.setCoordinates(positionalVector);
         planetObject.setAcceleration(newAcceleration);
-
     }
 
-    public static void heun3(PlanetObject planetObject, PlanetObject otherObject, double h){
-        double [] velocityVector = planetObject.getVelocity();
-        double [] positionalVector = planetObject.getCoordinates();
-        double [] acceleration = planetObject.getAcceleration();
-        double [] kr1 = new double [3];
-        double [] kr2 = new double [3];
-        double [] kr3 = new double [3];
-        double [] kv1 = new double [3];
-        double [] kv2 = new double [3];
-        double [] kv3 = new double [3];
+    public static void heun3(PlanetObject planetObject, PlanetObject otherObject, double h) {
+        double[] velocityVector = planetObject.getVelocity();
+        double[] positionalVector = planetObject.getCoordinates();
+        double[] acceleration = planetObject.getAcceleration();
+        double[] kr1 = new double[3];
+        double[] kr2 = new double[3];
+        double[] kr3 = new double[3];
+        double[] kv1 = new double[3];
+        double[] kv2 = new double[3];
+        double[] kv3 = new double[3];
 
-        for (int i = 0; i < 3; i++){
+        for (int i = 0; i < 3; i++) {
             kr1[i] = h * velocityVector[i];
             kv1[i] = acceleration[i] + accelerationFunction(positionalVector[i], planetObject, otherObject, i);
-            kr2[i] = h * (velocityVector[i] * (1/3)*kv1[i]);
-            kv2[i] = acceleration[i] + accelerationFunction(positionalVector[i] + (kr1[i]/3), planetObject, otherObject, i);
-            kr3[i] = h * (velocityVector[i] * (2/3)*kv2[i]);
-            kv3[i] = acceleration[i] + accelerationFunction(positionalVector[i] + (2/3)*kr2[i], planetObject, otherObject, i);
+            kr2[i] = h * (velocityVector[i] * (1 / 3) * kv1[i]);
+            kv2[i] = acceleration[i] + accelerationFunction(positionalVector[i] + (kr1[i] / 3), planetObject, otherObject, i);
+            kr3[i] = h * (velocityVector[i] * (2 / 3) * kv2[i]);
+            kv3[i] = acceleration[i] + accelerationFunction(positionalVector[i] + (2 / 3) * kr2[i], planetObject, otherObject, i);
 
-            velocityVector[i] = velocityVector[i] + (h/4) * (kv1[i] + 3*kv3[i]);
-            positionalVector[i] = positionalVector[i] + (h/4) * (kr1[i] + 3*kr3[i]);
+            velocityVector[i] = velocityVector[i] + (h / 4) * (kv1[i] + 3 * kv3[i]);
+            positionalVector[i] = positionalVector[i] + (h / 4) * (kr1[i] + 3 * kr3[i]);
         }
 
         double newAcceleration[] = new double[3];
@@ -202,7 +200,7 @@
         double[] newPositionalVector = new double[3];
         double[] newVelocityVector = new double[3];
         double[] acceleration = planetObject.getAcceleration();
-        double[] kv1 = new double [3];
+        double[] kv1 = new double[3];
         double[] newAcceleration = new double[3];
 
 
Index: src/test/java/ProbeTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import code.model.Model;\nimport code.model.data.loaders.FileDataLoader;\nimport code.model.objects.Probe;\nimport code.model.objects.Probe.Boost;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.assertArrayEquals;\n\npublic class ProbeTest {\n    private Probe probe;\n    private static final double PRECISION = 1e-9;\n\n    @BeforeEach\n    public void setUp() {\n        Model.getInstance().loadData(new FileDataLoader());\n        probe = new Probe();\n    }\n\n    @Test\n    public void testBoosterMECH() {\n        probe.addBoost(new Boost(1, new double[]{1, 1, 1}));\n        probe.BoosterMECH(1);\n        assertArrayEquals(new double[]{1, 1, 1}, probe.getVelocity(), PRECISION);\n    }\n\n    @Test\n    public void testBoosterMECHNoBoost() {\n        probe.addBoost(new Boost(1, new double[]{1, 1, 1}));\n        probe.BoosterMECH(0);\n        assertArrayEquals(new double[]{0, 0, 0}, probe.getVelocity(), PRECISION);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ProbeTest.java b/src/test/java/ProbeTest.java
--- a/src/test/java/ProbeTest.java	
+++ b/src/test/java/ProbeTest.java	
@@ -1,7 +1,7 @@
 import code.model.Model;
 import code.model.data.loaders.FileDataLoader;
+import code.model.objects.Boost;
 import code.model.objects.Probe;
-import code.model.objects.Probe.Boost;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
Index: src/main/java/code/graphics/overlay/OverlayPane.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package code.graphics.overlay;\n\nimport code.model.Model;\nimport code.model.objects.Probe;\nimport javafx.scene.control.Label;\nimport javafx.scene.layout.AnchorPane;\nimport javafx.scene.paint.Color;\nimport javafx.scene.text.Font;\nimport javafx.scene.text.FontWeight;\nimport javafx.scene.text.TextAlignment;\n\nimport java.math.RoundingMode;\nimport java.text.DecimalFormat;\n\npublic class OverlayPane extends AnchorPane {\n    private final ProbeStatsLabel DISTANCE_LABEL;\n    private final DecimalFormat DF;\n    private final Probe PROBE;\n    private final Font font = Font.font(\"Verdana\", FontWeight.BOLD, 15);\n\n\n    public OverlayPane() {\n        super();\n        PROBE = Model.getProbes().get(0);\n        DISTANCE_LABEL = new ProbeStatsLabel();\n        getChildren().add(new GuideLabel());\n        getChildren().add(DISTANCE_LABEL);\n        getChildren().add(new DateLabel());\n\n        DF = new DecimalFormat(\"#.###\");\n        DF.setRoundingMode(RoundingMode.HALF_UP);\n\n        update();\n    }\n\n\n    public void update() {\n        String labelText = \"Distance to Titan: \" + DF.format(PROBE.getDistanceToTitan()) + \" km\\nFuel used: \" + PROBE.getFuelUsed();\n        DISTANCE_LABEL.setText(labelText);\n    }\n\n    private class GuideLabel extends Label {\n        GuideLabel() {\n            super(\"\"\"\n                    Spacecraft - [1]\n                    Sun - [2]\n                    Titan - [3]\n                    Earth - [4]\n                    Saturn - [5]\n                    \"\"\");\n            setFont(font);\n            setStyle(\"-fx-line-spacing: 5;\");\n            setTextFill(Color.WHITE);\n            setTextAlignment(TextAlignment.RIGHT);\n            setBottomAnchor(this, 15d);\n            setRightAnchor(this, 15d);\n        }\n    }\n\n    private class ProbeStatsLabel extends Label {\n        ProbeStatsLabel() {\n            super();\n            setFont(font);\n            setTextFill(Color.WHITE);\n            setStyle(\"-fx-line-spacing: 5;\");\n            setTopAnchor(this, 10d);\n            setLeftAnchor(this, 10d);\n        }\n    }\n\n    private class DateLabel extends Label {\n        DateLabel() {\n            super(\"Date: \");\n            setFont(font);\n            setTextFill(Color.WHITE);\n            setTopAnchor(this, 10d);\n            setRightAnchor(this, 10d);\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/code/graphics/overlay/OverlayPane.java b/src/main/java/code/graphics/overlay/OverlayPane.java
--- a/src/main/java/code/graphics/overlay/OverlayPane.java	
+++ b/src/main/java/code/graphics/overlay/OverlayPane.java	
@@ -35,7 +35,7 @@
 
 
     public void update() {
-        String labelText = "Distance to Titan: " + DF.format(PROBE.getDistanceToTitan()) + " km\nFuel used: " + PROBE.getFuelUsed();
+        String labelText = "Distance to Titan: " + DF.format(PROBE.getDistanceToTitan()) + " km\nFuel used: " + DF.format(PROBE.getFuelUsed());
         DISTANCE_LABEL.setText(labelText);
     }
 
Index: src/main/java/code/model/objects/Probe.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package code.model.objects;\n\nimport code.model.Model;\nimport code.utils.HelperFunctions;\n\nimport java.util.*;\n\n//TODO boost velocity to fuel\n//TODO fix the queue\n//TODO add the limits to the boost from the req in manual\n\n\npublic class Probe extends PlanetObject {\n    private double shortestDistanceToTitan;\n    private int probeNumber;\n    private static int probeCounter = 0;\n    private final Queue<Boost> listOfBoosts;\n    private double fuelUsed;\n\n\n    public Probe() {\n        super(new double[3], new double[]{0, 0, 0});\n        probeNumber = probeCounter;\n        probeCounter++;\n        listOfBoosts = new PriorityQueue<Boost>();\n        setCoordinates(initialPosition());\n        setMass(50_000);\n        shortestDistanceToTitan = getDistanceToTitan();\n    }\n\n\n    @Override\n    public void setCoordinates(double[] coordinates) {\n        super.setCoordinates(coordinates);\n\n        double distanceToTitan = getDistanceToTitan();\n        if (distanceToTitan < shortestDistanceToTitan)\n            shortestDistanceToTitan = distanceToTitan;\n    }\n\n    private double[] initialPosition() {\n        double[] coordinates = HelperFunctions.subtract(Model.getPlanetObjects().get(\"Earth\").getCoordinates(),\n                Model.getPlanetObjects().get(\"Titan\").getCoordinates());\n\n        double magnitude = HelperFunctions.getVectorMagnitude(coordinates);\n        for (int i = 0; i <= 2; i++)\n            coordinates[i] = coordinates[i] * 6370 / magnitude;\n\n        return HelperFunctions.addition(coordinates, Model.getPlanetObjects().get(\"Earth\").getCoordinates());\n    }\n\n    public double getDistanceToTitan() {\n        return HelperFunctions.getDistanceBetween(this, Model.getPlanetObjects().get(\"Titan\"));\n    }\n\n    public double getShortestDistanceToTitan() {\n        return shortestDistanceToTitan;\n    }\n\n    public boolean areBoostsValid(double step) {\n        double maxImpulse = 3 * (Math.pow(10, 7)) * step;\n        ArrayList<Boost> list = new ArrayList<Boost>(listOfBoosts);\n        for (Boost boost : list) {\n            if (boost.getFuel() > maxImpulse)\n                return false;\n        }\n        return true;\n    }\n\n    public void addBoost(Boost boost) {\n        listOfBoosts.add(boost);\n        fuelUsed += boost.fuel;\n    }\n\n    public void BoosterMECH(double time) {\n        if (listOfBoosts.peek() != null) {\n            if (time == listOfBoosts.peek().getTimeOfBoost()) {\n                double[] probeVelocity = getVelocity();\n                double[] boostVelocity = listOfBoosts.poll().getVelocityOfBoost();\n                setVelocity(HelperFunctions.addition(probeVelocity, boostVelocity));\n            }\n        }\n    }\n\n    public int getProbeNumber() {\n        return probeNumber;\n    }\n\n    public double getFuelUsed() {\n        return fuelUsed;\n    }\n\n    @Override\n    public String toString() {\n        return \"Probe{\" +\n                \"shortestDistanceToTitan=\" + shortestDistanceToTitan +\n                \", listOfBoosts=\" + listOfBoosts +\n                \", fuelUsed=\" + fuelUsed +\n                '}';\n    }\n\n    public static class Boost implements Comparable {\n        private double timeOfBoost;\n        private double[] velocityOfBoost;\n        private double fuel;\n\n        public Boost(double time, double[] velocityOfBoost) {\n            this.timeOfBoost = time;\n            this.velocityOfBoost = velocityOfBoost;\n            //calculate the fuel used by the boost\n            fuel = HelperFunctions.getVectorMagnitude(velocityOfBoost) * 50_000;\n        }\n\n\n        public double getTimeOfBoost() {\n            return timeOfBoost;\n        }\n\n        public double[] getVelocityOfBoost() {\n            return velocityOfBoost;\n        }\n\n        public double getFuel() {\n            return fuel;\n        }\n\n        @Override\n        public int compareTo(Object o) {\n            return 0;\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/code/model/objects/Probe.java b/src/main/java/code/model/objects/Probe.java
--- a/src/main/java/code/model/objects/Probe.java	
+++ b/src/main/java/code/model/objects/Probe.java	
@@ -5,10 +5,6 @@
 
 import java.util.*;
 
-//TODO boost velocity to fuel
-//TODO fix the queue
-//TODO add the limits to the boost from the req in manual
-
 
 public class Probe extends PlanetObject {
     private double shortestDistanceToTitan;
@@ -22,7 +18,7 @@
         super(new double[3], new double[]{0, 0, 0});
         probeNumber = probeCounter;
         probeCounter++;
-        listOfBoosts = new PriorityQueue<Boost>();
+        listOfBoosts = new PriorityQueue<>();
         setCoordinates(initialPosition());
         setMass(50_000);
         shortestDistanceToTitan = getDistanceToTitan();
@@ -69,7 +65,7 @@
 
     public void addBoost(Boost boost) {
         listOfBoosts.add(boost);
-        fuelUsed += boost.fuel;
+        fuelUsed += boost.getFuel();
     }
 
     public void BoosterMECH(double time) {
@@ -98,35 +94,4 @@
                 ", fuelUsed=" + fuelUsed +
                 '}';
     }
-
-    public static class Boost implements Comparable {
-        private double timeOfBoost;
-        private double[] velocityOfBoost;
-        private double fuel;
-
-        public Boost(double time, double[] velocityOfBoost) {
-            this.timeOfBoost = time;
-            this.velocityOfBoost = velocityOfBoost;
-            //calculate the fuel used by the boost
-            fuel = HelperFunctions.getVectorMagnitude(velocityOfBoost) * 50_000;
-        }
-
-
-        public double getTimeOfBoost() {
-            return timeOfBoost;
-        }
-
-        public double[] getVelocityOfBoost() {
-            return velocityOfBoost;
-        }
-
-        public double getFuel() {
-            return fuel;
-        }
-
-        @Override
-        public int compareTo(Object o) {
-            return 0;
-        }
-    }
 }
Index: src/main/java/code/graphics/visuals/SolarSubScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package code.graphics.visuals;\n\nimport code.graphics.visuals.controllers.SolarKeyController;\nimport code.model.Model;\nimport javafx.scene.Group;\nimport javafx.scene.SceneAntialiasing;\nimport javafx.scene.SubScene;\nimport javafx.scene.paint.Color;\n\n/**\n * Class responsible for creating and managing the movement of the 3D objects in the visualization.\n */\npublic class SolarSubScene extends SubScene {\n    private final SolarGroup SOLAR_GROUP;\n    private final SolarCamera CAMERA;\n\n\n    public SolarSubScene(Group root, double width, double height) {\n        super(root, width, height, true, SceneAntialiasing.BALANCED);\n\n        SOLAR_GROUP = new SolarGroup(Model.getPlanetObjects(), Model.getProbes());\n        CAMERA = new SolarCamera();\n        root.getChildren().add(SOLAR_GROUP);\n\n        root.setTranslateX(width / 2);\n        root.setTranslateY(height / 2);\n\n        initializeSubScene();\n    }\n\n\n    private void initializeSubScene() {\n        setFill(Color.BLACK.brighter());\n        setCamera(CAMERA);\n        new SolarKeyController(this);\n        setCurrentFocus(\"Probe\");\n        rescaleObjects();\n    }\n\n    /**\n     * Updates the positions of all 3D objects representations.\n     */\n    public void updateObjects() {\n        SOLAR_GROUP.updateGroup();\n    }\n\n    public void rescaleObjects() {\n        double zoomThreshold = -100;\n        double maxZoom = -4_000_000_00d;\n        double currentZoom = CAMERA.getTranslateZ();\n\n        if (currentZoom > zoomThreshold) {\n            SOLAR_GROUP.resizeObjects(0);\n            return;\n        }\n\n        double zoomRatio = (currentZoom - zoomThreshold) / (maxZoom - zoomThreshold);\n        zoomRatio = Math.max(0, Math.min(zoomRatio, 1));\n\n        SOLAR_GROUP.resizeObjects(zoomRatio);\n    }\n\n    public void setCurrentFocus(String planetName) {\n        SOLAR_GROUP.setCurrentFocus(planetName);\n        CAMERA.setMinZoom(-SOLAR_GROUP.getPlanetSphereByName(planetName).getMinRadius());\n    }\n\n    public void addTrail(){\n        SOLAR_GROUP.addTrail();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/code/graphics/visuals/SolarSubScene.java b/src/main/java/code/graphics/visuals/SolarSubScene.java
--- a/src/main/java/code/graphics/visuals/SolarSubScene.java	
+++ b/src/main/java/code/graphics/visuals/SolarSubScene.java	
@@ -40,7 +40,7 @@
     /**
      * Updates the positions of all 3D objects representations.
      */
-    public void updateObjects() {
+    public void update() {
         SOLAR_GROUP.updateGroup();
     }
 
Index: src/main/java/code/algorithms/ModelRunner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package code.algorithms;\n\nimport code.model.objects.PlanetObject;\nimport code.model.objects.Probe;\nimport code.utils.HelperFunctions;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ModelRunner {\n    private ModelRunner() {\n    }\n\n\n    public static void runnerForGUI(int smoothness, double accuracy, PlanetObject[] planets) {\n        for (int i = 0; i < smoothness; i += 1) {\n            for (int j = 1; j < planets.length; j++) {\n                planets[j].initializeAcceleration();\n                for (int k = 0; k < planets.length; k++) {\n                    if (k != j)\n                        Solvers.explicitEuler(planets[j], planets[k], accuracy);\n                }\n            }\n        }\n    }\n\n    public static void runnerForFastEuler(int numberOfDays, double accuracy, PlanetObject[] planets) {\n        Probe probe = (Probe) planets[11];\n        for (int i = 0; i < (1 / accuracy) * 60 * 60 * 24 * numberOfDays; i += 1) {\n            if (i % ((1 / accuracy) * 60 * 60 * 24) == 0) {\n                double day = i / ((1 / accuracy) * 60 * 60 * 24);\n                System.out.println(\"Day \" + day);\n                probe.BoosterMECH(day);\n            }\n            for (int j = 1; j < planets.length; j++) {\n\n                double[] acc = new double[3];\n                for (int k = 0; k < planets.length; k++) {\n\n                    if (k != j) {\n                        acc = HelperFunctions.addition(acc, planets[j].accelerationBetween(planets[k]));\n                    }\n                }\n                Solvers.fastEuler(planets[j], acc, accuracy);\n            }\n        }\n    }\n\n    public static void runnerForModel(int numberOfDays, double accuracy, PlanetObject[] planets) {\n        for (int i = 0; i < (1 / accuracy) * 60 * 60 * 24 * numberOfDays; i += 1) {\n            if (i % ((1 / accuracy) * 60 * 60 * 24) == 0) {\n                System.out.println(i / ((1 / accuracy) * 60 * 60 * 24));\n            }\n            for (int j = 1; j < planets.length; j++) {\n                planets[j].initializeAcceleration();\n                for (int k = 0; k < planets.length; k++) {\n                    if (k != j) {\n                        Solvers.explicitEuler(planets[j], planets[k], accuracy);\n                    }\n                }\n            }\n        }\n    }\n\n    public static void runnerForMultipleProbes(int numberOfDays, double accuracy, List<PlanetObject> planetss, List<Probe> probes) {\n        ArrayList<PlanetObject> allObjects = new ArrayList<>(planetss);\n        allObjects.addAll(probes);\n        PlanetObject[] planets = allObjects.toArray(new PlanetObject[allObjects.size()]);\n        boolean stopper = false;\n        // check if the boosts\n        for (Probe probe : probes) {\n            if (!probe.areBoostsValid(accuracy)) {\n                stopper = true;\n                System.out.println(\"The probe \" + probe.getProbeNumber() + \" with wrong boost\");\n            }\n        }\n\n        if (!stopper) {\n            for (int i = 0; i < (1 / accuracy) * 60 * 60 * 24 * numberOfDays; i += 1) {\n\n                if (i % ((1 / accuracy) * 60 * 60 * 24) == 0) {\n                    double day = i / ((1 / accuracy) * 60 * 60 * 24);\n                    System.out.println(\"Day \" + day);\n                    for (Probe probe : probes) {\n                        probe.BoosterMECH(day);\n                    }\n                }\n                for (int j = 1; j < planets.length; j++) {\n\n                    double[] acc = new double[3];\n                    for (int k = 0; k < planets.length - probes.size(); k++) {\n\n                        if (k != j) {\n                            acc = HelperFunctions.addition(acc, planets[j].accelerationBetween(planets[k]));\n                        }\n                    }\n                    Solvers.fastEuler(planets[j], acc, accuracy);\n                }\n            }\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/code/algorithms/ModelRunner.java b/src/main/java/code/algorithms/ModelRunner.java
--- a/src/main/java/code/algorithms/ModelRunner.java	
+++ b/src/main/java/code/algorithms/ModelRunner.java	
@@ -16,10 +16,13 @@
         for (int i = 0; i < smoothness; i += 1) {
             for (int j = 1; j < planets.length; j++) {
                 planets[j].initializeAcceleration();
+                double[] acc = new double[3];
                 for (int k = 0; k < planets.length; k++) {
                     if (k != j)
-                        Solvers.explicitEuler(planets[j], planets[k], accuracy);
+                        //Solvers.explicitEuler(planets[j], planets[k], accuracy);
+                        acc = HelperFunctions.addition(acc, planets[j].accelerationBetween(planets[k]));
                 }
+                Solvers.fastEuler(planets[j], acc, accuracy);
             }
         }
     }
Index: src/main/java/code/model/objects/Boost.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/code/model/objects/Boost.java b/src/main/java/code/model/objects/Boost.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/code/model/objects/Boost.java	
@@ -0,0 +1,34 @@
+package code.model.objects;
+
+import code.utils.HelperFunctions;
+
+public class Boost implements Comparable<Boost> {
+    private double timeOfBoost;
+    private double[] velocityOfBoost;
+    private double fuel;
+
+
+    public Boost(double time, double[] velocityOfBoost) {
+        this.timeOfBoost = time;
+        this.velocityOfBoost = velocityOfBoost;
+        fuel = HelperFunctions.getVectorMagnitude(velocityOfBoost) * 50_000;
+    }
+
+
+    public double getTimeOfBoost() {
+        return timeOfBoost;
+    }
+
+    public double[] getVelocityOfBoost() {
+        return velocityOfBoost;
+    }
+
+    public double getFuel() {
+        return fuel;
+    }
+
+    @Override
+    public int compareTo(Boost other) {
+        return Double.compare(this.timeOfBoost, other.timeOfBoost);
+    }
+}
Index: src/main/java/code/algorithms/HillClimbing.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/code/algorithms/HillClimbing.java b/src/main/java/code/algorithms/HillClimbing.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/code/algorithms/HillClimbing.java	
@@ -0,0 +1,19 @@
+package code.algorithms;
+
+import code.model.Model;
+import code.model.objects.Probe;
+
+public class HillClimbing {
+    private final Probe PROBE = Model.getProbes().get(0);
+
+    public HillClimbing() {
+
+    }
+
+
+    private double objectiveFunction() {
+        return PROBE.getDistanceToTitan() + PROBE.getFuelUsed();
+    }
+
+
+}
Index: src/main/java/code/graphics/Visualizer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package code.graphics;\n\nimport code.algorithms.ModelRunner;\nimport code.graphics.overlay.OverlayPane;\nimport code.graphics.visuals.SolarSubScene;\nimport code.graphics.visuals.controllers.SolarKeyController;\nimport code.graphics.visuals.controllers.SolarMouseController;\nimport code.graphics.visuals.controllers.SolarScrollController;\nimport code.model.Model;\nimport code.model.objects.PlanetObject;\nimport javafx.application.Application;\nimport javafx.application.Platform;\nimport javafx.concurrent.Task;\nimport javafx.scene.Group;\nimport javafx.scene.Scene;\nimport javafx.scene.input.KeyEvent;\nimport javafx.scene.layout.StackPane;\nimport javafx.stage.Screen;\nimport javafx.stage.Stage;\n\nimport java.util.Timer;\n\npublic class Visualizer extends Application {\n    public static final int SCALE = 50; // don't change this\n    private final double WIDTH = Screen.getPrimary().getBounds().getWidth();\n    private final double HEIGHT = Screen.getPrimary().getBounds().getHeight();\n    private SolarSubScene solarSubScene;\n    private OverlayPane overlayPane;\n    private final PlanetObject[] planets = new PlanetObject[]{\n            Model.getPlanetObjects().get(\"Sun\"),\n            Model.getPlanetObjects().get(\"Mercury\"),\n            Model.getPlanetObjects().get(\"Venus\"),\n            Model.getPlanetObjects().get(\"Earth\"),\n            Model.getPlanetObjects().get(\"Moon\"),\n            Model.getPlanetObjects().get(\"Mars\"),\n            Model.getPlanetObjects().get(\"Jupiter\"),\n            Model.getPlanetObjects().get(\"Saturn\"),\n            Model.getPlanetObjects().get(\"Titan\"),\n            Model.getPlanetObjects().get(\"Neptune\"),\n            Model.getPlanetObjects().get(\"Uranus\"),\n            Model.getProbes().get(0)\n    };\n    private Timer timer;\n    private int count;\n\n\n    @Override\n    public void start(Stage stage) {\n        stage.setTitle(\"Mission to Titan\");\n        stage.show();\n\n        StackPane stackPane = new StackPane();\n        Scene scene = new Scene(stackPane, WIDTH, HEIGHT, true);\n\n        solarSubScene = new SolarSubScene(new Group(), WIDTH, HEIGHT);\n        new SolarMouseController(scene, solarSubScene);\n        new SolarScrollController(scene, solarSubScene);\n        scene.addEventFilter(KeyEvent.KEY_PRESSED, new SolarKeyController(solarSubScene));\n        stackPane.getChildren().add(solarSubScene);\n\n        overlayPane = new OverlayPane();\n        stackPane.getChildren().add(overlayPane);\n\n        stage.setScene(scene);\n\n        timer = new Timer();\n        count = 0;\n        stage.setOnCloseRequest(e -> {\n            timer.cancel();\n            Platform.exit();\n            System.exit(0);\n        });\n        Task<Void> sleeper = new Task<>() {\n            @Override\n            protected Void call() {\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException ignored) {\n                }\n                return null;\n            }\n        };\n        sleeper.setOnSucceeded(event -> calculation());\n        new Thread(sleeper).start();\n    }\n\n\n    private void calculation() {\n        timer.schedule(\n                new java.util.TimerTask() {\n                    @Override\n                    public void run() {\n                        for (int i = 0; i < 10; i++) {\n                            ModelRunner.runnerForGUI(180, 1, planets);\n                            Platform.runLater(() -> {\n                                solarSubScene.updateObjects();\n                                overlayPane.update();\n                            });\n                        }\n\n                        count++;\n                        if (count % 5 == 0)\n                            Platform.runLater(() -> solarSubScene.addTrail());\n                    }\n                }, 0, 1);\n    }\n\n    public static void main(String[] args) {\n        launch();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/code/graphics/Visualizer.java b/src/main/java/code/graphics/Visualizer.java
--- a/src/main/java/code/graphics/Visualizer.java	
+++ b/src/main/java/code/graphics/Visualizer.java	
@@ -93,13 +93,13 @@
                         for (int i = 0; i < 10; i++) {
                             ModelRunner.runnerForGUI(180, 1, planets);
                             Platform.runLater(() -> {
-                                solarSubScene.updateObjects();
+                                solarSubScene.update();
                                 overlayPane.update();
                             });
                         }
 
                         count++;
-                        if (count % 5 == 0)
+                        if (count % 50 == 0)
                             Platform.runLater(() -> solarSubScene.addTrail());
                     }
                 }, 0, 1);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"13cb742e-4cc8-4686-864c-bc5cb4fb0b5a\" name=\"Changes\" comment=\".\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/code/ProbeLauncher.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/code/ProbeLauncher.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/code/algorithms/HillClimbingAlg.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/code/algorithms/HillClimbingAlg.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/code/algorithms/ModelRunner.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/code/algorithms/ModelRunner.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/code/algorithms/Solvers.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/code/algorithms/Solvers.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/code/model/Model.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/code/model/Model.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/code/model/objects/Probe.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/code/model/objects/Probe.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CodeInsightWorkspaceSettings\">\n    <option name=\"optimizeImportsOnTheFly\" value=\"true\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Interface\" />\n        <option value=\"JavaFXApplication\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"StamaMathijs\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2NHEToQGlRKTbWGVth802s3yKhD\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"deletionFromPopupRequiresConfirmation\": \"false\",\n    \"git-widget-placeholder\": \"main\",\n    \"last_opened_file_path\": \"/Users/marcell/Documents/*School/Year 1/Semester 2/Project 1-2/Phase 2/Project1.2-Rocket-to-Titan\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"project.structure.last.edited\": \"Modules\",\n    \"project.structure.proportion\": \"0.15\",\n    \"project.structure.side.proportion\": \"0.0\",\n    \"settings.editor.selected.configurable\": \"MavenSettings\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/main/java\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/graphics/textures\" />\n      <recent name=\"$PROJECT_DIR$/src/test/java\" />\n      <recent name=\"$PROJECT_DIR$/src/main/resources/model\" />\n    </key>\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"group1.project12group1\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.ProbeLauncher\">\n    <configuration name=\"ProbeLauncher\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"code.ProbeLauncher\" />\n      <module name=\"Project1-2-Group-1\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"code.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"HelperFunctionsTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Project1-2-Group-1\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"HelperFunctionsTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"PlanetObjectTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Project1-2-Group-1\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"PlanetObjectTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"ProbeTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"Project1-2-Group-1\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"ProbeTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\n      <module name=\"Project1.2 Group 1\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\n      <module name=\"Project1.2 Group 1\" />\n      <option name=\"filePath\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <list>\n      <item itemvalue=\"Application.ProbeLauncher\" />\n      <item itemvalue=\"JUnit.ProbeTest\" />\n      <item itemvalue=\"JUnit.HelperFunctionsTest\" />\n      <item itemvalue=\"JUnit.PlanetObjectTest\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.ProbeLauncher\" />\n        <item itemvalue=\"JUnit.ProbeTest\" />\n        <item itemvalue=\"JUnit.PlanetObjectTest\" />\n        <item itemvalue=\"JUnit.HelperFunctionsTest\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"13cb742e-4cc8-4686-864c-bc5cb4fb0b5a\" name=\"Changes\" comment=\"\" />\n      <created>1679312618137</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1679312618137</updated>\n      <workItem from=\"1679312619245\" duration=\"1000\" />\n      <workItem from=\"1679356589531\" duration=\"4766000\" />\n      <workItem from=\"1679636818916\" duration=\"2665000\" />\n      <workItem from=\"1679649470844\" duration=\"787000\" />\n      <workItem from=\"1682574830037\" duration=\"138000\" />\n      <workItem from=\"1682575019746\" duration=\"212000\" />\n      <workItem from=\"1682575286272\" duration=\"169000\" />\n      <workItem from=\"1682575476442\" duration=\"191000\" />\n      <workItem from=\"1682575733021\" duration=\"369000\" />\n      <workItem from=\"1682576135260\" duration=\"55000\" />\n      <workItem from=\"1683509128969\" duration=\"1000\" />\n      <workItem from=\"1683509165621\" duration=\"1000\" />\n      <workItem from=\"1683517925630\" duration=\"15000\" />\n      <workItem from=\"1683524116632\" duration=\"504000\" />\n      <workItem from=\"1683547172038\" duration=\"177000\" />\n      <workItem from=\"1683811476154\" duration=\"39000\" />\n      <workItem from=\"1683824125042\" duration=\"993000\" />\n      <workItem from=\"1683838171440\" duration=\"610000\" />\n      <workItem from=\"1683842326368\" duration=\"3117000\" />\n      <workItem from=\"1683907388180\" duration=\"1082000\" />\n      <workItem from=\"1683908486983\" duration=\"4539000\" />\n      <workItem from=\"1683954695733\" duration=\"1411000\" />\n      <workItem from=\"1683956122161\" duration=\"1278000\" />\n      <workItem from=\"1683957543331\" duration=\"65000\" />\n      <workItem from=\"1683957626120\" duration=\"767000\" />\n      <workItem from=\"1684149645676\" duration=\"5926000\" />\n      <workItem from=\"1684230444313\" duration=\"356000\" />\n      <workItem from=\"1684231111698\" duration=\"93000\" />\n      <workItem from=\"1684231446204\" duration=\"2195000\" />\n      <workItem from=\"1684254939940\" duration=\"209000\" />\n      <workItem from=\"1684255315975\" duration=\"1579000\" />\n      <workItem from=\"1684271461931\" duration=\"2763000\" />\n      <workItem from=\"1684286667400\" duration=\"9645000\" />\n      <workItem from=\"1684888640017\" duration=\"702000\" />\n      <workItem from=\"1684889819665\" duration=\"23285000\" />\n      <workItem from=\"1684917492693\" duration=\"11884000\" />\n      <workItem from=\"1684985001778\" duration=\"19000\" />\n      <workItem from=\"1684985027174\" duration=\"2126000\" />\n      <workItem from=\"1684987179847\" duration=\"18196000\" />\n      <workItem from=\"1685237021566\" duration=\"609000\" />\n      <workItem from=\"1685309710200\" duration=\"12857000\" />\n      <workItem from=\"1685340479131\" duration=\"2513000\" />\n      <workItem from=\"1685345522631\" duration=\"1922000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"WORKING HOW THIS SHIT WORKS\">\n      <created>1679319564168</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679319564168</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Added some verson of working code\">\n      <created>1679322553538</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679322553538</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Added some impr\">\n      <created>1679341953937</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679341953937</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"changed the methods to work with momentkum\">\n      <created>1679420214209</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679420214209</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"bug fix\">\n      <created>1679482920572</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679482920572</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Added comments and cleaned the PlanetObject\">\n      <created>1679599809794</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679599809794</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Added comments and cleaned the PlanetObject\">\n      <created>1679600320463</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679600320463</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Added comments and cleaned the PlanetObject\">\n      <created>1679603739673</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679603739673</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"eeeeee\">\n      <created>1679608031109</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679608031109</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"eeeeee\">\n      <created>1679610941972</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679610941972</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"eeeeee\">\n      <created>1679611003457</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679611003457</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"eeeeee\">\n      <created>1679611384750</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679611384750</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"eeeeee\">\n      <created>1679611794976</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679611794976</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"eeeeee\">\n      <created>1679612189357</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679612189357</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"eeeeee\">\n      <created>1679649307609</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679649307609</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"eeeeee\">\n      <created>1679649317635</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1679649317635</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"base for graphics, general structure, will be updated\">\n      <created>1682575177410</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1682575177410</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"reading model from xlsx files and planet-spaceship classes used by the graphics (will be merged later)\">\n      <created>1682575388176</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1682575388176</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"resources\">\n      <created>1682575516061</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1682575516061</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"new new structure\">\n      <created>1683547337492</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1683547337492</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\".\">\n      <created>1684838530111</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1684838530111</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"before merging branch\">\n      <created>1684932175721</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1684932175721</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"gui\">\n      <created>1684944212239</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1684944212239</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"gui\">\n      <created>1685328017347</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685328017347</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"gui\">\n      <created>1685328453322</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685328453322</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"gui\">\n      <created>1685329080468</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685329080468</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"gui\">\n      <created>1685329364988</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685329364988</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"gui\">\n      <created>1685331142348</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685331142348</updated>\n    </task>\n    <task id=\"LOCAL-00029\" summary=\".\">\n      <created>1685336495399</created>\n      <option name=\"number\" value=\"00029\" />\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685336495399</updated>\n    </task>\n    <task id=\"LOCAL-00030\" summary=\".\">\n      <created>1685338281602</created>\n      <option name=\"number\" value=\"00030\" />\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685338281602</updated>\n    </task>\n    <task id=\"LOCAL-00031\" summary=\".\">\n      <created>1685338766185</created>\n      <option name=\"number\" value=\"00031\" />\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685338766185</updated>\n    </task>\n    <task id=\"LOCAL-00032\" summary=\".\">\n      <created>1685344124939</created>\n      <option name=\"number\" value=\"00032\" />\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685344124939</updated>\n    </task>\n    <task id=\"LOCAL-00033\" summary=\".\">\n      <created>1685344944273</created>\n      <option name=\"number\" value=\"00033\" />\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685344944273</updated>\n    </task>\n    <task id=\"LOCAL-00034\" summary=\".\">\n      <created>1685344987702</created>\n      <option name=\"number\" value=\"00034\" />\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685344987702</updated>\n    </task>\n    <task id=\"LOCAL-00035\" summary=\".\">\n      <created>1685353595496</created>\n      <option name=\"number\" value=\"00035\" />\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685353595496</updated>\n    </task>\n    <task id=\"LOCAL-00036\" summary=\".\">\n      <created>1685354891688</created>\n      <option name=\"number\" value=\"00036\" />\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1685354891688</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"37\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"origin/new-structure\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"added getAcceleration\" />\n    <MESSAGE value=\"WORKING HOW THIS SHIT WORKS\" />\n    <MESSAGE value=\"Added some verson of working code\" />\n    <MESSAGE value=\"Added some impr\" />\n    <MESSAGE value=\"changed the methods to work with momentum\" />\n    <MESSAGE value=\"changed the methods to work with momentkum\" />\n    <MESSAGE value=\"bug fix\" />\n    <MESSAGE value=\"Added comments and cleaned the PlanetObject\" />\n    <MESSAGE value=\"eeeeee\" />\n    <MESSAGE value=\"base for graphics, general structure, will be updated\" />\n    <MESSAGE value=\"reading model from xlsx files and planet-spaceship classes used by the graphics (will be merged later)\" />\n    <MESSAGE value=\"resources\" />\n    <MESSAGE value=\"new new structure\" />\n    <MESSAGE value=\"before merging branch\" />\n    <MESSAGE value=\"gui\" />\n    <MESSAGE value=\".\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\".\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/code/graphics/visuals/SolarGroup.java</url>\n          <line>57</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n    <pin-to-top-manager>\n      <pinned-members>\n        <PinnedItemInfo parentTag=\"code.model.objects.Probe\" memberName=\"COORDINATES\" />\n        <PinnedItemInfo parentTag=\"code.model.objects.PlanetObject\" memberName=\"COORDINATES\" />\n      </pinned-members>\n    </pin-to-top-manager>\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/Project1_2_Rocket_to_Titan$SolarSystem.ic\" NAME=\"SolarSystem Coverage Results\" MODIFIED=\"1679580725908\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>group1.project12group1.*</FILTER>\n    </SUITE>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,13 +5,18 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="13cb742e-4cc8-4686-864c-bc5cb4fb0b5a" name="Changes" comment=".">
+      <change afterPath="$PROJECT_DIR$/src/main/java/code/algorithms/HillClimbing.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/code/model/objects/Boost.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/code/NasaRunner.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/code/NasaRunner.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/code/ProbeLauncher.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/code/ProbeLauncher.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/code/algorithms/HillClimbingAlg.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/code/algorithms/HillClimbingAlg.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/code/algorithms/ModelRunner.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/code/algorithms/ModelRunner.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/code/algorithms/Solvers.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/code/algorithms/Solvers.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/code/model/Model.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/code/model/Model.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/code/graphics/Visualizer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/code/graphics/Visualizer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/code/graphics/overlay/OverlayPane.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/code/graphics/overlay/OverlayPane.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/code/graphics/visuals/SolarSubScene.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/code/graphics/visuals/SolarSubScene.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/code/model/objects/Probe.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/code/model/objects/Probe.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/ProbeTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/ProbeTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -24,8 +29,8 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
-        <option value="Interface" />
         <option value="JavaFXApplication" />
+        <option value="Interface" />
         <option value="Class" />
       </list>
     </option>
@@ -49,25 +54,25 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "deletionFromPopupRequiresConfirmation": "false",
-    "git-widget-placeholder": "main",
-    "last_opened_file_path": "/Users/marcell/Documents/*School/Year 1/Semester 2/Project 1-2/Phase 2/Project1.2-Rocket-to-Titan",
-    "node.js.detected.package.eslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "project.structure.last.edited": "Modules",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.0",
-    "settings.editor.selected.configurable": "MavenSettings",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;deletionFromPopupRequiresConfirmation&quot;: &quot;false&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;last_opened_file_path&quot;: &quot;/Users/marcell/Documents/*School/Year 1/Semester 2/Project 1-2/Phase 2/Project1.2-Rocket-to-Titan&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;MavenSettings&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$" />
@@ -203,6 +208,7 @@
       <workItem from="1685309710200" duration="12857000" />
       <workItem from="1685340479131" duration="2513000" />
       <workItem from="1685345522631" duration="1922000" />
+      <workItem from="1685411172767" duration="13851000" />
     </task>
     <task id="LOCAL-00001" summary="WORKING HOW THIS SHIT WORKS">
       <created>1679319564168</created>
@@ -456,7 +462,14 @@
       <option name="project" value="LOCAL" />
       <updated>1685354891688</updated>
     </task>
-    <option name="localTasksCounter" value="37" />
+    <task id="LOCAL-00037" summary=".">
+      <created>1685358091487</created>
+      <option name="number" value="00037" />
+      <option name="presentableId" value="LOCAL-00037" />
+      <option name="project" value="LOCAL" />
+      <updated>1685358091487</updated>
+    </task>
+    <option name="localTasksCounter" value="38" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
